public abstract class Shape   //单独的的java文件
{
String name; // 声明属性
public abstract double getArea(); // 抽象方法声明
}



public class Tritangle extends Shape // 这是Shape 的派生子类，单独的java类
{
double sideA,sideB,sideC; // 声明实例变量三角形3 条边
public Tritangle() // 构造器
{
name=" 示例全等三角形";
sideA=1.0;
sideB=1.0;
sideC=1.0;
}
public Tritangle(double sideA,double sideB,double sideC)  // 构造函数
{
name=" 任意三角形";
this.sideA = sideA;
this.sideB = sideB;
this.sideC = sideC;
}
// 覆盖抽象方法
public double getArea()
{
double s=0.5*(sideA+sideB+sideC);
return Math.sqrt(s*(s-sideA)*(s-sideB)*(s-sideC));// 使用数学开方方法
}
}



public class Circle extends Shape // 继承Shape 类，单独的java文件
{
double radius;
public Circle()
{
name=" 标准圆";
radius=1.0;
}
public Circle(double radius)
{
name=" 一般圆";
this.radius=radius;
}
public double getArea() // 覆盖父类方法
{
return radius*radius*Math.PI; // 返回圆的面积
}
public double remainArea()
{
Polygon p1=new Polygon(radius,radius,radius); // 创建内部类对象，调用的是内部类
return getArea()-p1.getArea();
}
class Polygon // 定义内部类
{
Tritangle t1; // 声明三角形类对象
Polygon(double a,double b,double c) // 内部类构造方法
{
t1=new Tritangle(a,b,c); // 创建三角形对象，内部类调用的是父类构造方法
}
double getArea() // 内部类方法，此方法是覆盖方法
{
return t1.getArea()*6; // 返回正六边形面积
}
}
}
